{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":69,"index":148}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":39,"index":221}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/LoopsContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"LoopsProvider\", {\n    enumerable: true,\n    get: function () {\n      return LoopsProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useLoops\", {\n    enumerable: true,\n    get: function () {\n      return useLoops;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || '';\n  const LoopsContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const LoopsProvider = ({\n    children\n  }) => {\n    const [loops, setLoops] = (0, _react.useState)([]);\n    const [refreshing, setRefreshing] = (0, _react.useState)(false);\n\n    // Load loops from AsyncStorage or backend on mount\n    const fetchLoops = async () => {\n      console.log('LoopsContext: fetchLoops started');\n      setRefreshing(true);\n      try {\n        // First try to load from AsyncStorage for offline support\n        const storedLoops = await AsyncStorage.default.getItem('loops');\n        console.log('AsyncStorage loops:', storedLoops);\n        if (storedLoops) {\n          const parsedLoops = JSON.parse(storedLoops);\n          console.log('Parsed stored loops:', parsedLoops);\n          setLoops(parsedLoops);\n        } else {\n          // Fallback data to prevent blank screen\n          console.log('No stored loops, using fallback');\n          const fallbackLoops = [{\n            id: 'temp',\n            name: 'Temp Loop',\n            progress: 0,\n            completed_tasks: 0,\n            total_tasks: 1,\n            color: '#FFC93A'\n          }];\n          setLoops(fallbackLoops);\n        }\n\n        // Then fetch from backend to get latest data\n        const token = await AsyncStorage.default.getItem('token');\n        console.log('Token exists:', !!token);\n        if (token) {\n          console.log('Fetching from backend:', `${API_BASE_URL}/api/loops`);\n          const response = await fetch(`${API_BASE_URL}/api/loops`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('Backend response status:', response.status);\n          if (response.ok) {\n            const backendLoops = await response.json();\n            console.log('Backend loops received:', backendLoops);\n            setLoops(backendLoops);\n            // Update local storage with fresh data\n            await AsyncStorage.default.setItem('loops', JSON.stringify(backendLoops));\n          } else {\n            console.log('Backend response not ok:', await response.text());\n          }\n        }\n      } catch (error) {\n        console.log('Error fetching loops:', error);\n      } finally {\n        console.log('LoopsContext: fetchLoops completed');\n        setRefreshing(false);\n      }\n    };\n\n    // Load loops on mount\n    (0, _react.useEffect)(() => {\n      console.log('LoopsContext: useEffect triggered, calling fetchLoops');\n      fetchLoops();\n    }, []);\n    const reorderLoops = async newLoops => {\n      setLoops(newLoops);\n\n      // Persist to AsyncStorage immediately for responsive UI\n      await AsyncStorage.default.setItem('loops', JSON.stringify(newLoops));\n\n      // Optionally sync to backend: make a PATCH request to FastAPI endpoint\n      try {\n        const token = await AsyncStorage.default.getItem('token');\n        if (token) {\n          const loopIds = newLoops.map(loop => loop.id);\n          await fetch(`${API_BASE_URL}/api/loops/reorder`, {\n            method: 'PATCH',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              loop_ids: loopIds\n            })\n          });\n        }\n      } catch (error) {\n        console.log('Error syncing loop order to backend:', error);\n        // Could add retry logic or show user notification here\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(LoopsContext.Provider, {\n      value: {\n        loops,\n        setLoops,\n        reorderLoops,\n        fetchLoops,\n        refreshing\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this);\n  };\n  const useLoops = () => {\n    const context = (0, _react.useContext)(LoopsContext);\n    if (!context) {\n      throw new Error('useLoops must be used within LoopsProvider');\n    }\n    return context;\n  };\n});","lineCount":149,"map":[[13,2,18,0,"Object"],[13,8,18,0],[13,9,18,0,"defineProperty"],[13,23,18,0],[13,24,18,0,"exports"],[13,31,18,0],[14,4,18,0,"enumerable"],[14,14,18,0],[15,4,18,0,"get"],[15,7,18,0],[15,18,18,0,"get"],[15,19,18,0],[16,6,18,0],[16,13,18,0,"LoopsProvider"],[16,26,18,0],[17,4,18,0],[18,2,18,0],[19,2,117,0,"Object"],[19,8,117,0],[19,9,117,0,"defineProperty"],[19,23,117,0],[19,24,117,0,"exports"],[19,31,117,0],[20,4,117,0,"enumerable"],[20,14,117,0],[21,4,117,0,"get"],[21,7,117,0],[21,18,117,0,"get"],[21,19,117,0],[22,6,117,0],[22,13,117,0,"useLoops"],[22,21,117,0],[23,4,117,0],[24,2,117,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,6,0],[31,8,6,6,"API_BASE_URL"],[31,20,6,18],[31,23,6,21,"Constants"],[31,32,6,30],[31,33,6,30,"default"],[31,40,6,30],[31,41,6,31,"expoConfig"],[31,51,6,41],[31,53,6,43,"extra"],[31,58,6,48],[31,60,6,50,"EXPO_PUBLIC_BACKEND_URL"],[31,83,6,73],[31,87,6,77],[31,89,6,79],[32,2,16,0],[32,8,16,6,"LoopsContext"],[32,20,16,18],[32,36,16,21],[32,40,16,21,"createContext"],[32,46,16,34],[32,47,16,34,"createContext"],[32,60,16,34],[32,62,16,65,"undefined"],[32,71,16,74],[32,72,16,75],[33,2,18,7],[33,8,18,13,"LoopsProvider"],[33,21,18,67],[33,24,18,70,"LoopsProvider"],[33,25,18,71],[34,4,18,73,"children"],[35,2,18,82],[35,3,18,83],[35,8,18,88],[36,4,19,2],[36,10,19,8],[36,11,19,9,"loops"],[36,16,19,14],[36,18,19,16,"setLoops"],[36,26,19,24],[36,27,19,25],[36,30,19,28],[36,34,19,28,"useState"],[36,40,19,36],[36,41,19,36,"useState"],[36,49,19,36],[36,51,19,45],[36,53,19,47],[36,54,19,48],[37,4,20,2],[37,10,20,8],[37,11,20,9,"refreshing"],[37,21,20,19],[37,23,20,21,"setRefreshing"],[37,36,20,34],[37,37,20,35],[37,40,20,38],[37,44,20,38,"useState"],[37,50,20,46],[37,51,20,46,"useState"],[37,59,20,46],[37,61,20,47],[37,66,20,52],[37,67,20,53],[39,4,22,2],[40,4,23,2],[40,10,23,8,"fetchLoops"],[40,20,23,18],[40,23,23,21],[40,29,23,21,"fetchLoops"],[40,30,23,21],[40,35,23,33],[41,6,24,4,"console"],[41,13,24,11],[41,14,24,12,"log"],[41,17,24,15],[41,18,24,16],[41,52,24,50],[41,53,24,51],[42,6,25,4,"setRefreshing"],[42,19,25,17],[42,20,25,18],[42,24,25,22],[42,25,25,23],[43,6,26,4],[43,10,26,8],[44,8,27,6],[45,8,28,6],[45,14,28,12,"storedLoops"],[45,25,28,23],[45,28,28,26],[45,34,28,32,"AsyncStorage"],[45,46,28,44],[45,47,28,44,"default"],[45,54,28,44],[45,55,28,45,"getItem"],[45,62,28,52],[45,63,28,53],[45,70,28,60],[45,71,28,61],[46,8,29,6,"console"],[46,15,29,13],[46,16,29,14,"log"],[46,19,29,17],[46,20,29,18],[46,41,29,39],[46,43,29,41,"storedLoops"],[46,54,29,52],[46,55,29,53],[47,8,30,6],[47,12,30,10,"storedLoops"],[47,23,30,21],[47,25,30,23],[48,10,31,8],[48,16,31,14,"parsedLoops"],[48,27,31,25],[48,30,31,28,"JSON"],[48,34,31,32],[48,35,31,33,"parse"],[48,40,31,38],[48,41,31,39,"storedLoops"],[48,52,31,50],[48,53,31,51],[49,10,32,8,"console"],[49,17,32,15],[49,18,32,16,"log"],[49,21,32,19],[49,22,32,20],[49,44,32,42],[49,46,32,44,"parsedLoops"],[49,57,32,55],[49,58,32,56],[50,10,33,8,"setLoops"],[50,18,33,16],[50,19,33,17,"parsedLoops"],[50,30,33,28],[50,31,33,29],[51,8,34,6],[51,9,34,7],[51,15,34,13],[52,10,35,8],[53,10,36,8,"console"],[53,17,36,15],[53,18,36,16,"log"],[53,21,36,19],[53,22,36,20],[53,55,36,53],[53,56,36,54],[54,10,37,8],[54,16,37,14,"fallbackLoops"],[54,29,37,27],[54,32,37,30],[54,33,37,31],[55,12,37,33,"id"],[55,14,37,35],[55,16,37,37],[55,22,37,43],[56,12,37,45,"name"],[56,16,37,49],[56,18,37,51],[56,29,37,62],[57,12,37,64,"progress"],[57,20,37,72],[57,22,37,74],[57,23,37,75],[58,12,37,77,"completed_tasks"],[58,27,37,92],[58,29,37,94],[58,30,37,95],[59,12,37,97,"total_tasks"],[59,23,37,108],[59,25,37,110],[59,26,37,111],[60,12,37,113,"color"],[60,17,37,118],[60,19,37,120],[61,10,37,130],[61,11,37,131],[61,12,37,132],[62,10,38,8,"setLoops"],[62,18,38,16],[62,19,38,17,"fallbackLoops"],[62,32,38,30],[62,33,38,31],[63,8,39,6],[65,8,41,6],[66,8,42,6],[66,14,42,12,"token"],[66,19,42,17],[66,22,42,20],[66,28,42,26,"AsyncStorage"],[66,40,42,38],[66,41,42,38,"default"],[66,48,42,38],[66,49,42,39,"getItem"],[66,56,42,46],[66,57,42,47],[66,64,42,54],[66,65,42,55],[67,8,43,6,"console"],[67,15,43,13],[67,16,43,14,"log"],[67,19,43,17],[67,20,43,18],[67,35,43,33],[67,37,43,35],[67,38,43,36],[67,39,43,37,"token"],[67,44,43,42],[67,45,43,43],[68,8,44,6],[68,12,44,10,"token"],[68,17,44,15],[68,19,44,17],[69,10,45,8,"console"],[69,17,45,15],[69,18,45,16,"log"],[69,21,45,19],[69,22,45,20],[69,46,45,44],[69,48,45,46],[69,51,45,49,"API_BASE_URL"],[69,63,45,61],[69,75,45,73],[69,76,45,74],[70,10,46,8],[70,16,46,14,"response"],[70,24,46,22],[70,27,46,25],[70,33,46,31,"fetch"],[70,38,46,36],[70,39,46,37],[70,42,46,40,"API_BASE_URL"],[70,54,46,52],[70,66,46,64],[70,68,46,66],[71,12,47,10,"headers"],[71,19,47,17],[71,21,47,19],[72,14,48,12],[72,29,48,27],[72,31,48,29],[72,41,48,39,"token"],[72,46,48,44],[72,48,48,46],[73,14,49,12],[73,28,49,26],[73,30,49,28],[74,12,50,10],[75,10,51,8],[75,11,51,9],[75,12,51,10],[76,10,53,8,"console"],[76,17,53,15],[76,18,53,16,"log"],[76,21,53,19],[76,22,53,20],[76,48,53,46],[76,50,53,48,"response"],[76,58,53,56],[76,59,53,57,"status"],[76,65,53,63],[76,66,53,64],[77,10,54,8],[77,14,54,12,"response"],[77,22,54,20],[77,23,54,21,"ok"],[77,25,54,23],[77,27,54,25],[78,12,55,10],[78,18,55,16,"backendLoops"],[78,30,55,28],[78,33,55,31],[78,39,55,37,"response"],[78,47,55,45],[78,48,55,46,"json"],[78,52,55,50],[78,53,55,51],[78,54,55,52],[79,12,56,10,"console"],[79,19,56,17],[79,20,56,18,"log"],[79,23,56,21],[79,24,56,22],[79,49,56,47],[79,51,56,49,"backendLoops"],[79,63,56,61],[79,64,56,62],[80,12,57,10,"setLoops"],[80,20,57,18],[80,21,57,19,"backendLoops"],[80,33,57,31],[80,34,57,32],[81,12,58,10],[82,12,59,10],[82,18,59,16,"AsyncStorage"],[82,30,59,28],[82,31,59,28,"default"],[82,38,59,28],[82,39,59,29,"setItem"],[82,46,59,36],[82,47,59,37],[82,54,59,44],[82,56,59,46,"JSON"],[82,60,59,50],[82,61,59,51,"stringify"],[82,70,59,60],[82,71,59,61,"backendLoops"],[82,83,59,73],[82,84,59,74],[82,85,59,75],[83,10,60,8],[83,11,60,9],[83,17,60,15],[84,12,61,10,"console"],[84,19,61,17],[84,20,61,18,"log"],[84,23,61,21],[84,24,61,22],[84,50,61,48],[84,52,61,50],[84,58,61,56,"response"],[84,66,61,64],[84,67,61,65,"text"],[84,71,61,69],[84,72,61,70],[84,73,61,71],[84,74,61,72],[85,10,62,8],[86,8,63,6],[87,6,64,4],[87,7,64,5],[87,8,64,6],[87,15,64,13,"error"],[87,20,64,18],[87,22,64,20],[88,8,65,6,"console"],[88,15,65,13],[88,16,65,14,"log"],[88,19,65,17],[88,20,65,18],[88,43,65,41],[88,45,65,43,"error"],[88,50,65,48],[88,51,65,49],[89,6,66,4],[89,7,66,5],[89,16,66,14],[90,8,67,6,"console"],[90,15,67,13],[90,16,67,14,"log"],[90,19,67,17],[90,20,67,18],[90,56,67,54],[90,57,67,55],[91,8,68,6,"setRefreshing"],[91,21,68,19],[91,22,68,20],[91,27,68,25],[91,28,68,26],[92,6,69,4],[93,4,70,2],[93,5,70,3],[95,4,72,2],[96,4,73,2],[96,8,73,2,"useEffect"],[96,14,73,11],[96,15,73,11,"useEffect"],[96,24,73,11],[96,26,73,12],[96,32,73,18],[97,6,74,4,"console"],[97,13,74,11],[97,14,74,12,"log"],[97,17,74,15],[97,18,74,16],[97,73,74,71],[97,74,74,72],[98,6,75,4,"fetchLoops"],[98,16,75,14],[98,17,75,15],[98,18,75,16],[99,4,76,2],[99,5,76,3],[99,7,76,5],[99,9,76,7],[99,10,76,8],[100,4,78,2],[100,10,78,8,"reorderLoops"],[100,22,78,20],[100,25,78,23],[100,31,78,30,"newLoops"],[100,39,78,46],[100,43,78,51],[101,6,79,4,"setLoops"],[101,14,79,12],[101,15,79,13,"newLoops"],[101,23,79,21],[101,24,79,22],[103,6,81,4],[104,6,82,4],[104,12,82,10,"AsyncStorage"],[104,24,82,22],[104,25,82,22,"default"],[104,32,82,22],[104,33,82,23,"setItem"],[104,40,82,30],[104,41,82,31],[104,48,82,38],[104,50,82,40,"JSON"],[104,54,82,44],[104,55,82,45,"stringify"],[104,64,82,54],[104,65,82,55,"newLoops"],[104,73,82,63],[104,74,82,64],[104,75,82,65],[106,6,84,4],[107,6,85,4],[107,10,85,8],[108,8,86,6],[108,14,86,12,"token"],[108,19,86,17],[108,22,86,20],[108,28,86,26,"AsyncStorage"],[108,40,86,38],[108,41,86,38,"default"],[108,48,86,38],[108,49,86,39,"getItem"],[108,56,86,46],[108,57,86,47],[108,64,86,54],[108,65,86,55],[109,8,87,6],[109,12,87,10,"token"],[109,17,87,15],[109,19,87,17],[110,10,88,8],[110,16,88,14,"loopIds"],[110,23,88,21],[110,26,88,24,"newLoops"],[110,34,88,32],[110,35,88,33,"map"],[110,38,88,36],[110,39,88,37,"loop"],[110,43,88,41],[110,47,88,45,"loop"],[110,51,88,49],[110,52,88,50,"id"],[110,54,88,52],[110,55,88,53],[111,10,89,8],[111,16,89,14,"fetch"],[111,21,89,19],[111,22,89,20],[111,25,89,23,"API_BASE_URL"],[111,37,89,35],[111,57,89,55],[111,59,89,57],[112,12,90,10,"method"],[112,18,90,16],[112,20,90,18],[112,27,90,25],[113,12,91,10,"headers"],[113,19,91,17],[113,21,91,19],[114,14,92,12],[114,29,92,27],[114,31,92,29],[114,41,92,39,"token"],[114,46,92,44],[114,48,92,46],[115,14,93,12],[115,28,93,26],[115,30,93,28],[116,12,94,10],[116,13,94,11],[117,12,95,10,"body"],[117,16,95,14],[117,18,95,16,"JSON"],[117,22,95,20],[117,23,95,21,"stringify"],[117,32,95,30],[117,33,95,31],[118,14,95,33,"loop_ids"],[118,22,95,41],[118,24,95,43,"loopIds"],[119,12,95,51],[119,13,95,52],[120,10,96,8],[120,11,96,9],[120,12,96,10],[121,8,97,6],[122,6,98,4],[122,7,98,5],[122,8,98,6],[122,15,98,13,"error"],[122,20,98,18],[122,22,98,20],[123,8,99,6,"console"],[123,15,99,13],[123,16,99,14,"log"],[123,19,99,17],[123,20,99,18],[123,58,99,56],[123,60,99,58,"error"],[123,65,99,63],[123,66,99,64],[124,8,100,6],[125,6,101,4],[126,4,102,2],[126,5,102,3],[127,4,104,2],[127,24,105,4],[127,28,105,4,"_reactJsxDevRuntime"],[127,47,105,4],[127,48,105,4,"jsxDEV"],[127,54,105,4],[127,56,105,5,"LoopsContext"],[127,68,105,17],[127,69,105,18,"Provider"],[127,77,105,26],[128,6,105,27,"value"],[128,11,105,32],[128,13,105,34],[129,8,106,6,"loops"],[129,13,106,11],[130,8,107,6,"setLoops"],[130,16,107,14],[131,8,108,6,"reorderLoops"],[131,20,108,18],[132,8,109,6,"fetchLoops"],[132,18,109,16],[133,8,110,6,"refreshing"],[134,6,111,4],[134,7,111,6],[135,6,111,6,"children"],[135,14,111,6],[135,16,112,7,"children"],[136,4,112,15],[137,6,112,15,"fileName"],[137,14,112,15],[137,16,112,15,"_jsxFileName"],[137,28,112,15],[138,6,112,15,"lineNumber"],[138,16,112,15],[139,6,112,15,"columnNumber"],[139,18,112,15],[140,4,112,15],[140,11,113,27],[140,12,113,28],[141,2,115,0],[141,3,115,1],[142,2,117,7],[142,8,117,13,"useLoops"],[142,16,117,21],[142,19,117,24,"useLoops"],[142,20,117,24],[142,25,117,30],[143,4,118,2],[143,10,118,8,"context"],[143,17,118,15],[143,20,118,18],[143,24,118,18,"useContext"],[143,30,118,28],[143,31,118,28,"useContext"],[143,41,118,28],[143,43,118,29,"LoopsContext"],[143,55,118,41],[143,56,118,42],[144,4,119,2],[144,8,119,6],[144,9,119,7,"context"],[144,16,119,14],[144,18,119,16],[145,6,120,4],[145,12,120,10],[145,16,120,14,"Error"],[145,21,120,19],[145,22,120,20],[145,66,120,64],[145,67,120,65],[146,4,121,2],[147,4,122,2],[147,11,122,9,"context"],[147,18,122,16],[148,2,123,0],[148,3,123,1],[149,0,123,2],[149,3]],"functionMap":{"names":["<global>","LoopsProvider","fetchLoops","useEffect$argument_0","reorderLoops","newLoops.map$argument_0","useLoops"],"mappings":"AAA;sECiB;qBCK;GD+C;YEG;GFG;uBGE;qCCU,eD;GHc;CDa;wBME;CNM"},"hasCjsExports":false},"type":"js/module"}]}