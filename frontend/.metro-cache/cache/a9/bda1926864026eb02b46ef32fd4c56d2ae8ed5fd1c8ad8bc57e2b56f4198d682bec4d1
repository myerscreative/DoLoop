{"dependencies":[{"name":"react-native-reanimated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"bo7uvEY9Xm8UmqPDTWhyayJ74mM=","exportNames":["*"],"imports":1}},{"name":"../context/animatedValueContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":71},"end":{"line":2,"column":68,"index":139}}],"key":"PmBdl8pzzAl7l3VtyMh1DJCtwlc=","exportNames":["*"],"imports":1}},{"name":"../context/draggableFlatListContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":140},"end":{"line":3,"column":82,"index":222}}],"key":"WYAEExKl8ScULn7mkOW3UbANclU=","exportNames":["*"],"imports":1}},{"name":"../context/refContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":223},"end":{"line":4,"column":48,"index":271}}],"key":"VaS29xXZJkpWaFqu1Bq0avG05R0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useCellTranslate = useCellTranslate;\n  var _reactNativeReanimated = require(_dependencyMap[0], \"react-native-reanimated\");\n  var _contextAnimatedValueContext = require(_dependencyMap[1], \"../context/animatedValueContext\");\n  var _contextDraggableFlatListContext = require(_dependencyMap[2], \"../context/draggableFlatListContext\");\n  var _contextRefContext = require(_dependencyMap[3], \"../context/refContext\");\n  const _worklet_14653729795643_init_data = {\n    code: \"function reactNativeDraggableFlatlist_useCellTranslateJs1(){const{cellIndex,activeIndexAnim,viewableIndexMin,viewableIndexMax,activeKey,hoverOffset,activeCellSize,cellOffset,cellSize,spacerIndexAnim,placeholderOffset,hoverAnim,withSpring,animationConfigRef}=this.__closure;const isActiveCell=cellIndex===activeIndexAnim.value;const isOutsideViewableRange=!isActiveCell&&(cellIndex<viewableIndexMin.value||cellIndex>viewableIndexMax.value);if(!activeKey||activeIndexAnim.value<0||isOutsideViewableRange){return 0;}const isBeforeActive=cellIndex<activeIndexAnim.value;const isAfterActive=cellIndex>activeIndexAnim.value;const hoverPlusActiveSize=hoverOffset.value+activeCellSize.value;const offsetPlusHalfSize=cellOffset.value+cellSize.value/2;const offsetPlusSize=cellOffset.value+cellSize.value;let result=-1;if(isAfterActive){if(hoverPlusActiveSize>=cellOffset.value&&hoverPlusActiveSize<offsetPlusHalfSize){result=cellIndex-1;}else if(hoverPlusActiveSize>=offsetPlusHalfSize&&hoverPlusActiveSize<offsetPlusSize){result=cellIndex;}}else if(isBeforeActive){if(hoverOffset.value<offsetPlusSize&&hoverOffset.value>=offsetPlusHalfSize){result=cellIndex+1;}else if(hoverOffset.value>=cellOffset.value&&hoverOffset.value<offsetPlusHalfSize){result=cellIndex;}}if(result!==-1&&result!==spacerIndexAnim.value){spacerIndexAnim.value=result;}if(spacerIndexAnim.value===cellIndex){const newPlaceholderOffset=isAfterActive?cellSize.value+(cellOffset.value-activeCellSize.value):cellOffset.value;placeholderOffset.value=newPlaceholderOffset;}if(isActiveCell){return hoverAnim.value;}const shouldTranslate=isAfterActive?cellIndex<=spacerIndexAnim.value:cellIndex>=spacerIndexAnim.value;const translationAmt=shouldTranslate?activeCellSize.value*(isAfterActive?-1:1):0;return withSpring(translationAmt,animationConfigRef.value);}\",\n    location: \"/app/frontend/node_modules/react-native-draggable-flatlist/lib/module/hooks/useCellTranslate.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeDraggableFlatlist_useCellTranslateJs1\\\",\\\"cellIndex\\\",\\\"activeIndexAnim\\\",\\\"viewableIndexMin\\\",\\\"viewableIndexMax\\\",\\\"activeKey\\\",\\\"hoverOffset\\\",\\\"activeCellSize\\\",\\\"cellOffset\\\",\\\"cellSize\\\",\\\"spacerIndexAnim\\\",\\\"placeholderOffset\\\",\\\"hoverAnim\\\",\\\"withSpring\\\",\\\"animationConfigRef\\\",\\\"__closure\\\",\\\"isActiveCell\\\",\\\"value\\\",\\\"isOutsideViewableRange\\\",\\\"isBeforeActive\\\",\\\"isAfterActive\\\",\\\"hoverPlusActiveSize\\\",\\\"offsetPlusHalfSize\\\",\\\"offsetPlusSize\\\",\\\"result\\\",\\\"newPlaceholderOffset\\\",\\\"shouldTranslate\\\",\\\"translationAmt\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-draggable-flatlist/lib/module/hooks/useCellTranslate.js\\\"],\\\"mappings\\\":\\\"AA0BoC,SAAAA,gDAAMA,CAAA,QAAAC,SAAA,CAAAC,eAAA,CAAAC,gBAAA,CAAAC,gBAAA,CAAAC,SAAA,CAAAC,WAAA,CAAAC,cAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,eAAA,CAAAC,iBAAA,CAAAC,SAAA,CAAAC,UAAA,CAAAC,kBAAA,OAAAC,SAAA,CACtC,KAAM,CAAAC,YAAY,CAAGf,SAAS,GAAKC,eAAe,CAACe,KAAK,CACxD,KAAM,CAAAC,sBAAsB,CAAG,CAACF,YAAY,GAAKf,SAAS,CAAGE,gBAAgB,CAACc,KAAK,EAAIhB,SAAS,CAAGG,gBAAgB,CAACa,KAAK,CAAC,CAE1H,GAAI,CAACZ,SAAS,EAAIH,eAAe,CAACe,KAAK,CAAG,CAAC,EAAIC,sBAAsB,CAAE,CACrE,MAAO,EAAC,CACV,CAGA,KAAM,CAAAC,cAAc,CAAGlB,SAAS,CAAGC,eAAe,CAACe,KAAK,CACxD,KAAM,CAAAG,aAAa,CAAGnB,SAAS,CAAGC,eAAe,CAACe,KAAK,CACvD,KAAM,CAAAI,mBAAmB,CAAGf,WAAW,CAACW,KAAK,CAAGV,cAAc,CAACU,KAAK,CACpE,KAAM,CAAAK,kBAAkB,CAAGd,UAAU,CAACS,KAAK,CAAGR,QAAQ,CAACQ,KAAK,CAAG,CAAC,CAChE,KAAM,CAAAM,cAAc,CAAGf,UAAU,CAACS,KAAK,CAAGR,QAAQ,CAACQ,KAAK,CACxD,GAAI,CAAAO,MAAM,CAAG,CAAC,CAAC,CAEf,GAAIJ,aAAa,CAAE,CACjB,GAAIC,mBAAmB,EAAIb,UAAU,CAACS,KAAK,EAAII,mBAAmB,CAAGC,kBAAkB,CAAE,CAEvFE,MAAM,CAAGvB,SAAS,CAAG,CAAC,CACxB,CAAC,IAAM,IAAIoB,mBAAmB,EAAIC,kBAAkB,EAAID,mBAAmB,CAAGE,cAAc,CAAE,CAE5FC,MAAM,CAAGvB,SAAS,CACpB,CACF,CAAC,IAAM,IAAIkB,cAAc,CAAE,CACzB,GAAIb,WAAW,CAACW,KAAK,CAAGM,cAAc,EAAIjB,WAAW,CAACW,KAAK,EAAIK,kBAAkB,CAAE,CAEjFE,MAAM,CAAGvB,SAAS,CAAG,CAAC,CACxB,CAAC,IAAM,IAAIK,WAAW,CAACW,KAAK,EAAIT,UAAU,CAACS,KAAK,EAAIX,WAAW,CAACW,KAAK,CAAGK,kBAAkB,CAAE,CAE1FE,MAAM,CAAGvB,SAAS,CACpB,CACF,CAEA,GAAIuB,MAAM,GAAK,CAAC,CAAC,EAAIA,MAAM,GAAKd,eAAe,CAACO,KAAK,CAAE,CACrDP,eAAe,CAACO,KAAK,CAAGO,MAAM,CAChC,CAEA,GAAId,eAAe,CAACO,KAAK,GAAKhB,SAAS,CAAE,CACvC,KAAM,CAAAwB,oBAAoB,CAAGL,aAAa,CAAGX,QAAQ,CAACQ,KAAK,EAAIT,UAAU,CAACS,KAAK,CAAGV,cAAc,CAACU,KAAK,CAAC,CAAGT,UAAU,CAACS,KAAK,CAC1HN,iBAAiB,CAACM,KAAK,CAAGQ,oBAAoB,CAChD,CAGA,GAAIT,YAAY,CAAE,CAChB,MAAO,CAAAJ,SAAS,CAACK,KAAK,CACxB,CAIA,KAAM,CAAAS,eAAe,CAAGN,aAAa,CAAGnB,SAAS,EAAIS,eAAe,CAACO,KAAK,CAAGhB,SAAS,EAAIS,eAAe,CAACO,KAAK,CAC/G,KAAM,CAAAU,cAAc,CAAGD,eAAe,CAAGnB,cAAc,CAACU,KAAK,EAAIG,aAAa,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAC5F,MAAO,CAAAP,UAAU,CAACc,cAAc,CAAEb,kBAAkB,CAACG,KAAK,CAAC,CAC7D\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function useCellTranslate(_ref) {\n    let {\n      cellIndex,\n      cellSize,\n      cellOffset\n    } = _ref;\n    const {\n      activeIndexAnim,\n      activeCellSize,\n      hoverOffset,\n      spacerIndexAnim,\n      placeholderOffset,\n      hoverAnim,\n      viewableIndexMin,\n      viewableIndexMax\n    } = (0, _contextAnimatedValueContext.useAnimatedValues)();\n    const {\n      activeKey\n    } = (0, _contextDraggableFlatListContext.useDraggableFlatListContext)();\n    const {\n      animationConfigRef\n    } = (0, _contextRefContext.useRefs)();\n    const translate = (0, _reactNativeReanimated.useDerivedValue)(function () {\n      const _e = [new global.Error(), -15, -27];\n      const reactNativeDraggableFlatlist_useCellTranslateJs1 = function () {\n        const isActiveCell = cellIndex === activeIndexAnim.value;\n        const isOutsideViewableRange = !isActiveCell && (cellIndex < viewableIndexMin.value || cellIndex > viewableIndexMax.value);\n        if (!activeKey || activeIndexAnim.value < 0 || isOutsideViewableRange) {\n          return 0;\n        } // Determining spacer index is hard to visualize. See diagram: https://i.imgur.com/jRPf5t3.jpg\n\n        const isBeforeActive = cellIndex < activeIndexAnim.value;\n        const isAfterActive = cellIndex > activeIndexAnim.value;\n        const hoverPlusActiveSize = hoverOffset.value + activeCellSize.value;\n        const offsetPlusHalfSize = cellOffset.value + cellSize.value / 2;\n        const offsetPlusSize = cellOffset.value + cellSize.value;\n        let result = -1;\n        if (isAfterActive) {\n          if (hoverPlusActiveSize >= cellOffset.value && hoverPlusActiveSize < offsetPlusHalfSize) {\n            // bottom edge of active cell overlaps top half of current cell\n            result = cellIndex - 1;\n          } else if (hoverPlusActiveSize >= offsetPlusHalfSize && hoverPlusActiveSize < offsetPlusSize) {\n            // bottom edge of active cell overlaps bottom half of current cell\n            result = cellIndex;\n          }\n        } else if (isBeforeActive) {\n          if (hoverOffset.value < offsetPlusSize && hoverOffset.value >= offsetPlusHalfSize) {\n            // top edge of active cell overlaps bottom half of current cell\n            result = cellIndex + 1;\n          } else if (hoverOffset.value >= cellOffset.value && hoverOffset.value < offsetPlusHalfSize) {\n            // top edge of active cell overlaps top half of current cell\n            result = cellIndex;\n          }\n        }\n        if (result !== -1 && result !== spacerIndexAnim.value) {\n          spacerIndexAnim.value = result;\n        }\n        if (spacerIndexAnim.value === cellIndex) {\n          const newPlaceholderOffset = isAfterActive ? cellSize.value + (cellOffset.value - activeCellSize.value) : cellOffset.value;\n          placeholderOffset.value = newPlaceholderOffset;\n        } // Active cell follows touch\n\n        if (isActiveCell) {\n          return hoverAnim.value;\n        } // Translate cell down if it is before active index and active cell has passed it.\n        // Translate cell up if it is after the active index and active cell has passed it.\n\n        const shouldTranslate = isAfterActive ? cellIndex <= spacerIndexAnim.value : cellIndex >= spacerIndexAnim.value;\n        const translationAmt = shouldTranslate ? activeCellSize.value * (isAfterActive ? -1 : 1) : 0;\n        return (0, _reactNativeReanimated.withSpring)(translationAmt, animationConfigRef.value);\n      };\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__closure = {\n        cellIndex,\n        activeIndexAnim,\n        viewableIndexMin,\n        viewableIndexMax,\n        activeKey,\n        hoverOffset,\n        activeCellSize,\n        cellOffset,\n        cellSize,\n        spacerIndexAnim,\n        placeholderOffset,\n        hoverAnim,\n        withSpring: _reactNativeReanimated.withSpring,\n        animationConfigRef\n      };\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__workletHash = 14653729795643;\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__initData = _worklet_14653729795643_init_data;\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__stackDetails = _e;\n      return reactNativeDraggableFlatlist_useCellTranslateJs1;\n    }(), [activeKey, cellIndex]);\n    return translate;\n  }\n});","lineCount":112,"map":[[7,2,5,0,"exports"],[7,9,5,0],[7,10,5,0,"useCellTranslate"],[7,26,5,0],[7,29,5,0,"useCellTranslate"],[7,45,5,0],[8,2,1,0],[8,6,1,0,"_reactNativeReanimated"],[8,28,1,0],[8,31,1,0,"require"],[8,38,1,0],[8,39,1,0,"_dependencyMap"],[8,53,1,0],[9,2,2,0],[9,6,2,0,"_contextAnimatedValueContext"],[9,34,2,0],[9,37,2,0,"require"],[9,44,2,0],[9,45,2,0,"_dependencyMap"],[9,59,2,0],[10,2,3,0],[10,6,3,0,"_contextDraggableFlatListContext"],[10,38,3,0],[10,41,3,0,"require"],[10,48,3,0],[10,49,3,0,"_dependencyMap"],[10,63,3,0],[11,2,4,0],[11,6,4,0,"_contextRefContext"],[11,24,4,0],[11,27,4,0,"require"],[11,34,4,0],[11,35,4,0,"_dependencyMap"],[11,49,4,0],[12,2,4,48],[12,8,4,48,"_worklet_14653729795643_init_data"],[12,41,4,48],[13,4,4,48,"code"],[13,8,4,48],[14,4,4,48,"location"],[14,12,4,48],[15,4,4,48,"sourceMap"],[15,13,4,48],[16,4,4,48,"version"],[16,11,4,48],[17,2,4,48],[18,2,5,7],[18,11,5,16,"useCellTranslate"],[18,27,5,32,"useCellTranslate"],[18,28,5,33,"_ref"],[18,32,5,37],[18,34,5,39],[19,4,6,2],[19,8,6,6],[20,6,7,4,"cellIndex"],[20,15,7,13],[21,6,8,4,"cellSize"],[21,14,8,12],[22,6,9,4,"cellOffset"],[23,4,10,2],[23,5,10,3],[23,8,10,6,"_ref"],[23,12,10,10],[24,4,11,2],[24,10,11,8],[25,6,12,4,"activeIndexAnim"],[25,21,12,19],[26,6,13,4,"activeCellSize"],[26,20,13,18],[27,6,14,4,"hoverOffset"],[27,17,14,15],[28,6,15,4,"spacerIndexAnim"],[28,21,15,19],[29,6,16,4,"placeholderOffset"],[29,23,16,21],[30,6,17,4,"hoverAnim"],[30,15,17,13],[31,6,18,4,"viewableIndexMin"],[31,22,18,20],[32,6,19,4,"viewableIndexMax"],[33,4,20,2],[33,5,20,3],[33,8,20,6],[33,12,20,6,"useAnimatedValues"],[33,40,20,23],[33,41,20,23,"useAnimatedValues"],[33,58,20,23],[33,60,20,24],[33,61,20,25],[34,4,21,2],[34,10,21,8],[35,6,22,4,"activeKey"],[36,4,23,2],[36,5,23,3],[36,8,23,6],[36,12,23,6,"useDraggableFlatListContext"],[36,44,23,33],[36,45,23,33,"useDraggableFlatListContext"],[36,72,23,33],[36,74,23,34],[36,75,23,35],[37,4,24,2],[37,10,24,8],[38,6,25,4,"animationConfigRef"],[39,4,26,2],[39,5,26,3],[39,8,26,6],[39,12,26,6,"useRefs"],[39,30,26,13],[39,31,26,13,"useRefs"],[39,38,26,13],[39,40,26,14],[39,41,26,15],[40,4,27,2],[40,10,27,8,"translate"],[40,19,27,17],[40,22,27,20],[40,26,27,20,"useDerivedValue"],[40,48,27,35],[40,49,27,35,"useDerivedValue"],[40,64,27,35],[40,66,27,36],[41,6,27,36],[41,12,27,36,"_e"],[41,14,27,36],[41,22,27,36,"global"],[41,28,27,36],[41,29,27,36,"Error"],[41,34,27,36],[42,6,27,36],[42,12,27,36,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[42,60,27,36],[42,72,27,36,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[42,73,27,36],[42,75,27,42],[43,8,28,4],[43,14,28,10,"isActiveCell"],[43,26,28,22],[43,29,28,25,"cellIndex"],[43,38,28,34],[43,43,28,39,"activeIndexAnim"],[43,58,28,54],[43,59,28,55,"value"],[43,64,28,60],[44,8,29,4],[44,14,29,10,"isOutsideViewableRange"],[44,36,29,32],[44,39,29,35],[44,40,29,36,"isActiveCell"],[44,52,29,48],[44,57,29,53,"cellIndex"],[44,66,29,62],[44,69,29,65,"viewableIndexMin"],[44,85,29,81],[44,86,29,82,"value"],[44,91,29,87],[44,95,29,91,"cellIndex"],[44,104,29,100],[44,107,29,103,"viewableIndexMax"],[44,123,29,119],[44,124,29,120,"value"],[44,129,29,125],[44,130,29,126],[45,8,31,4],[45,12,31,8],[45,13,31,9,"activeKey"],[45,22,31,18],[45,26,31,22,"activeIndexAnim"],[45,41,31,37],[45,42,31,38,"value"],[45,47,31,43],[45,50,31,46],[45,51,31,47],[45,55,31,51,"isOutsideViewableRange"],[45,77,31,73],[45,79,31,75],[46,10,32,6],[46,17,32,13],[46,18,32,14],[47,8,33,4],[47,9,33,5],[47,10,33,6],[49,8,36,4],[49,14,36,10,"isBeforeActive"],[49,28,36,24],[49,31,36,27,"cellIndex"],[49,40,36,36],[49,43,36,39,"activeIndexAnim"],[49,58,36,54],[49,59,36,55,"value"],[49,64,36,60],[50,8,37,4],[50,14,37,10,"isAfterActive"],[50,27,37,23],[50,30,37,26,"cellIndex"],[50,39,37,35],[50,42,37,38,"activeIndexAnim"],[50,57,37,53],[50,58,37,54,"value"],[50,63,37,59],[51,8,38,4],[51,14,38,10,"hoverPlusActiveSize"],[51,33,38,29],[51,36,38,32,"hoverOffset"],[51,47,38,43],[51,48,38,44,"value"],[51,53,38,49],[51,56,38,52,"activeCellSize"],[51,70,38,66],[51,71,38,67,"value"],[51,76,38,72],[52,8,39,4],[52,14,39,10,"offsetPlusHalfSize"],[52,32,39,28],[52,35,39,31,"cellOffset"],[52,45,39,41],[52,46,39,42,"value"],[52,51,39,47],[52,54,39,50,"cellSize"],[52,62,39,58],[52,63,39,59,"value"],[52,68,39,64],[52,71,39,67],[52,72,39,68],[53,8,40,4],[53,14,40,10,"offsetPlusSize"],[53,28,40,24],[53,31,40,27,"cellOffset"],[53,41,40,37],[53,42,40,38,"value"],[53,47,40,43],[53,50,40,46,"cellSize"],[53,58,40,54],[53,59,40,55,"value"],[53,64,40,60],[54,8,41,4],[54,12,41,8,"result"],[54,18,41,14],[54,21,41,17],[54,22,41,18],[54,23,41,19],[55,8,43,4],[55,12,43,8,"isAfterActive"],[55,25,43,21],[55,27,43,23],[56,10,44,6],[56,14,44,10,"hoverPlusActiveSize"],[56,33,44,29],[56,37,44,33,"cellOffset"],[56,47,44,43],[56,48,44,44,"value"],[56,53,44,49],[56,57,44,53,"hoverPlusActiveSize"],[56,76,44,72],[56,79,44,75,"offsetPlusHalfSize"],[56,97,44,93],[56,99,44,95],[57,12,45,8],[58,12,46,8,"result"],[58,18,46,14],[58,21,46,17,"cellIndex"],[58,30,46,26],[58,33,46,29],[58,34,46,30],[59,10,47,6],[59,11,47,7],[59,17,47,13],[59,21,47,17,"hoverPlusActiveSize"],[59,40,47,36],[59,44,47,40,"offsetPlusHalfSize"],[59,62,47,58],[59,66,47,62,"hoverPlusActiveSize"],[59,85,47,81],[59,88,47,84,"offsetPlusSize"],[59,102,47,98],[59,104,47,100],[60,12,48,8],[61,12,49,8,"result"],[61,18,49,14],[61,21,49,17,"cellIndex"],[61,30,49,26],[62,10,50,6],[63,8,51,4],[63,9,51,5],[63,15,51,11],[63,19,51,15,"isBeforeActive"],[63,33,51,29],[63,35,51,31],[64,10,52,6],[64,14,52,10,"hoverOffset"],[64,25,52,21],[64,26,52,22,"value"],[64,31,52,27],[64,34,52,30,"offsetPlusSize"],[64,48,52,44],[64,52,52,48,"hoverOffset"],[64,63,52,59],[64,64,52,60,"value"],[64,69,52,65],[64,73,52,69,"offsetPlusHalfSize"],[64,91,52,87],[64,93,52,89],[65,12,53,8],[66,12,54,8,"result"],[66,18,54,14],[66,21,54,17,"cellIndex"],[66,30,54,26],[66,33,54,29],[66,34,54,30],[67,10,55,6],[67,11,55,7],[67,17,55,13],[67,21,55,17,"hoverOffset"],[67,32,55,28],[67,33,55,29,"value"],[67,38,55,34],[67,42,55,38,"cellOffset"],[67,52,55,48],[67,53,55,49,"value"],[67,58,55,54],[67,62,55,58,"hoverOffset"],[67,73,55,69],[67,74,55,70,"value"],[67,79,55,75],[67,82,55,78,"offsetPlusHalfSize"],[67,100,55,96],[67,102,55,98],[68,12,56,8],[69,12,57,8,"result"],[69,18,57,14],[69,21,57,17,"cellIndex"],[69,30,57,26],[70,10,58,6],[71,8,59,4],[72,8,61,4],[72,12,61,8,"result"],[72,18,61,14],[72,23,61,19],[72,24,61,20],[72,25,61,21],[72,29,61,25,"result"],[72,35,61,31],[72,40,61,36,"spacerIndexAnim"],[72,55,61,51],[72,56,61,52,"value"],[72,61,61,57],[72,63,61,59],[73,10,62,6,"spacerIndexAnim"],[73,25,62,21],[73,26,62,22,"value"],[73,31,62,27],[73,34,62,30,"result"],[73,40,62,36],[74,8,63,4],[75,8,65,4],[75,12,65,8,"spacerIndexAnim"],[75,27,65,23],[75,28,65,24,"value"],[75,33,65,29],[75,38,65,34,"cellIndex"],[75,47,65,43],[75,49,65,45],[76,10,66,6],[76,16,66,12,"newPlaceholderOffset"],[76,36,66,32],[76,39,66,35,"isAfterActive"],[76,52,66,48],[76,55,66,51,"cellSize"],[76,63,66,59],[76,64,66,60,"value"],[76,69,66,65],[76,73,66,69,"cellOffset"],[76,83,66,79],[76,84,66,80,"value"],[76,89,66,85],[76,92,66,88,"activeCellSize"],[76,106,66,102],[76,107,66,103,"value"],[76,112,66,108],[76,113,66,109],[76,116,66,112,"cellOffset"],[76,126,66,122],[76,127,66,123,"value"],[76,132,66,128],[77,10,67,6,"placeholderOffset"],[77,27,67,23],[77,28,67,24,"value"],[77,33,67,29],[77,36,67,32,"newPlaceholderOffset"],[77,56,67,52],[78,8,68,4],[78,9,68,5],[78,10,68,6],[80,8,71,4],[80,12,71,8,"isActiveCell"],[80,24,71,20],[80,26,71,22],[81,10,72,6],[81,17,72,13,"hoverAnim"],[81,26,72,22],[81,27,72,23,"value"],[81,32,72,28],[82,8,73,4],[82,9,73,5],[82,10,73,6],[83,8,74,4],[85,8,77,4],[85,14,77,10,"shouldTranslate"],[85,29,77,25],[85,32,77,28,"isAfterActive"],[85,45,77,41],[85,48,77,44,"cellIndex"],[85,57,77,53],[85,61,77,57,"spacerIndexAnim"],[85,76,77,72],[85,77,77,73,"value"],[85,82,77,78],[85,85,77,81,"cellIndex"],[85,94,77,90],[85,98,77,94,"spacerIndexAnim"],[85,113,77,109],[85,114,77,110,"value"],[85,119,77,115],[86,8,78,4],[86,14,78,10,"translationAmt"],[86,28,78,24],[86,31,78,27,"shouldTranslate"],[86,46,78,42],[86,49,78,45,"activeCellSize"],[86,63,78,59],[86,64,78,60,"value"],[86,69,78,65],[86,73,78,69,"isAfterActive"],[86,86,78,82],[86,89,78,85],[86,90,78,86],[86,91,78,87],[86,94,78,90],[86,95,78,91],[86,96,78,92],[86,99,78,95],[86,100,78,96],[87,8,79,4],[87,15,79,11],[87,19,79,11,"withSpring"],[87,41,79,21],[87,42,79,21,"withSpring"],[87,52,79,21],[87,54,79,22,"translationAmt"],[87,68,79,36],[87,70,79,38,"animationConfigRef"],[87,88,79,56],[87,89,79,57,"value"],[87,94,79,62],[87,95,79,63],[88,6,80,2],[88,7,80,3],[89,6,80,3,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[89,54,80,3],[89,55,80,3,"__closure"],[89,64,80,3],[90,8,80,3,"cellIndex"],[90,17,80,3],[91,8,80,3,"activeIndexAnim"],[91,23,80,3],[92,8,80,3,"viewableIndexMin"],[92,24,80,3],[93,8,80,3,"viewableIndexMax"],[93,24,80,3],[94,8,80,3,"activeKey"],[94,17,80,3],[95,8,80,3,"hoverOffset"],[95,19,80,3],[96,8,80,3,"activeCellSize"],[96,22,80,3],[97,8,80,3,"cellOffset"],[97,18,80,3],[98,8,80,3,"cellSize"],[98,16,80,3],[99,8,80,3,"spacerIndexAnim"],[99,23,80,3],[100,8,80,3,"placeholderOffset"],[100,25,80,3],[101,8,80,3,"hoverAnim"],[101,17,80,3],[102,8,80,3,"withSpring"],[102,18,80,3],[102,20,79,11,"withSpring"],[102,42,79,21],[102,43,79,21,"withSpring"],[102,53,79,21],[103,8,79,21,"animationConfigRef"],[104,6,79,21],[105,6,79,21,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[105,54,79,21],[105,55,79,21,"__workletHash"],[105,68,79,21],[106,6,79,21,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[106,54,79,21],[106,55,79,21,"__initData"],[106,65,79,21],[106,68,79,21,"_worklet_14653729795643_init_data"],[106,101,79,21],[107,6,79,21,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[107,54,79,21],[107,55,79,21,"__stackDetails"],[107,69,79,21],[107,72,79,21,"_e"],[107,74,79,21],[108,6,79,21],[108,13,79,21,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[108,61,79,21],[109,4,79,21],[109,5,27,36],[109,9,80,5],[109,10,80,6,"activeKey"],[109,19,80,15],[109,21,80,17,"cellIndex"],[109,30,80,26],[109,31,80,27],[109,32,80,28],[110,4,81,2],[110,11,81,9,"translate"],[110,20,81,18],[111,2,82,0],[112,0,82,1],[112,3]],"functionMap":{"names":["<global>","useCellTranslate","useDerivedValue$argument_0"],"mappings":"AAA;OCI;oCCsB;GDqD;CDE"},"hasCjsExports":false},"type":"js/module"}]}