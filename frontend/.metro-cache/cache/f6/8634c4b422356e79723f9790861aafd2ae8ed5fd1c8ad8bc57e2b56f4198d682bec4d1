{"dependencies":[{"name":"react-native-reanimated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"bo7uvEY9Xm8UmqPDTWhyayJ74mM=","exportNames":["*"],"imports":1}},{"name":"../context/animatedValueContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":71},"end":{"line":2,"column":68,"index":139}}],"key":"PmBdl8pzzAl7l3VtyMh1DJCtwlc=","exportNames":["*"],"imports":1}},{"name":"../context/draggableFlatListContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":140},"end":{"line":3,"column":82,"index":222}}],"key":"WYAEExKl8ScULn7mkOW3UbANclU=","exportNames":["*"],"imports":1}},{"name":"../context/refContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":223},"end":{"line":4,"column":48,"index":271}}],"key":"VaS29xXZJkpWaFqu1Bq0avG05R0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useCellTranslate = useCellTranslate;\n  var _reactNativeReanimated = require(_dependencyMap[0], \"react-native-reanimated\");\n  var _contextAnimatedValueContext = require(_dependencyMap[1], \"../context/animatedValueContext\");\n  var _contextDraggableFlatListContext = require(_dependencyMap[2], \"../context/draggableFlatListContext\");\n  var _contextRefContext = require(_dependencyMap[3], \"../context/refContext\");\n  const _worklet_14653729795643_init_data = {\n    code: \"function reactNativeDraggableFlatlist_useCellTranslateJs1(){const{cellIndex,activeIndexAnim,viewableIndexMin,viewableIndexMax,activeKey,hoverOffset,activeCellSize,cellOffset,cellSize,spacerIndexAnim,placeholderOffset,hoverAnim,withSpring,animationConfigRef}=this.__closure;const isActiveCell=cellIndex===activeIndexAnim.value;const isOutsideViewableRange=!isActiveCell&&(cellIndex<viewableIndexMin.value||cellIndex>viewableIndexMax.value);if(!activeKey||activeIndexAnim.value<0||isOutsideViewableRange){return 0;}const isBeforeActive=cellIndex<activeIndexAnim.value;const isAfterActive=cellIndex>activeIndexAnim.value;const hoverPlusActiveSize=hoverOffset.value+activeCellSize.value;const offsetPlusHalfSize=cellOffset.value+cellSize.value/2;const offsetPlusSize=cellOffset.value+cellSize.value;let result=-1;if(isAfterActive){if(hoverPlusActiveSize>=cellOffset.value&&hoverPlusActiveSize<offsetPlusHalfSize){result=cellIndex-1;}else if(hoverPlusActiveSize>=offsetPlusHalfSize&&hoverPlusActiveSize<offsetPlusSize){result=cellIndex;}}else if(isBeforeActive){if(hoverOffset.value<offsetPlusSize&&hoverOffset.value>=offsetPlusHalfSize){result=cellIndex+1;}else if(hoverOffset.value>=cellOffset.value&&hoverOffset.value<offsetPlusHalfSize){result=cellIndex;}}if(result!==-1&&result!==spacerIndexAnim.value){spacerIndexAnim.value=result;}if(spacerIndexAnim.value===cellIndex){const newPlaceholderOffset=isAfterActive?cellSize.value+(cellOffset.value-activeCellSize.value):cellOffset.value;placeholderOffset.value=newPlaceholderOffset;}if(isActiveCell){return hoverAnim.value;}const shouldTranslate=isAfterActive?cellIndex<=spacerIndexAnim.value:cellIndex>=spacerIndexAnim.value;const translationAmt=shouldTranslate?activeCellSize.value*(isAfterActive?-1:1):0;return withSpring(translationAmt,animationConfigRef.value);}\",\n    location: \"/app/frontend/node_modules/react-native-draggable-flatlist/lib/module/hooks/useCellTranslate.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeDraggableFlatlist_useCellTranslateJs1\\\",\\\"cellIndex\\\",\\\"activeIndexAnim\\\",\\\"viewableIndexMin\\\",\\\"viewableIndexMax\\\",\\\"activeKey\\\",\\\"hoverOffset\\\",\\\"activeCellSize\\\",\\\"cellOffset\\\",\\\"cellSize\\\",\\\"spacerIndexAnim\\\",\\\"placeholderOffset\\\",\\\"hoverAnim\\\",\\\"withSpring\\\",\\\"animationConfigRef\\\",\\\"__closure\\\",\\\"isActiveCell\\\",\\\"value\\\",\\\"isOutsideViewableRange\\\",\\\"isBeforeActive\\\",\\\"isAfterActive\\\",\\\"hoverPlusActiveSize\\\",\\\"offsetPlusHalfSize\\\",\\\"offsetPlusSize\\\",\\\"result\\\",\\\"newPlaceholderOffset\\\",\\\"shouldTranslate\\\",\\\"translationAmt\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-draggable-flatlist/lib/module/hooks/useCellTranslate.js\\\"],\\\"mappings\\\":\\\"AA0BoC,SAAAA,gDAAMA,CAAA,QAAAC,SAAA,CAAAC,eAAA,CAAAC,gBAAA,CAAAC,gBAAA,CAAAC,SAAA,CAAAC,WAAA,CAAAC,cAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,eAAA,CAAAC,iBAAA,CAAAC,SAAA,CAAAC,UAAA,CAAAC,kBAAA,OAAAC,SAAA,CACtC,KAAM,CAAAC,YAAY,CAAGf,SAAS,GAAKC,eAAe,CAACe,KAAK,CACxD,KAAM,CAAAC,sBAAsB,CAAG,CAACF,YAAY,GAAKf,SAAS,CAAGE,gBAAgB,CAACc,KAAK,EAAIhB,SAAS,CAAGG,gBAAgB,CAACa,KAAK,CAAC,CAE1H,GAAI,CAACZ,SAAS,EAAIH,eAAe,CAACe,KAAK,CAAG,CAAC,EAAIC,sBAAsB,CAAE,CACrE,MAAO,EAAC,CACV,CAGA,KAAM,CAAAC,cAAc,CAAGlB,SAAS,CAAGC,eAAe,CAACe,KAAK,CACxD,KAAM,CAAAG,aAAa,CAAGnB,SAAS,CAAGC,eAAe,CAACe,KAAK,CACvD,KAAM,CAAAI,mBAAmB,CAAGf,WAAW,CAACW,KAAK,CAAGV,cAAc,CAACU,KAAK,CACpE,KAAM,CAAAK,kBAAkB,CAAGd,UAAU,CAACS,KAAK,CAAGR,QAAQ,CAACQ,KAAK,CAAG,CAAC,CAChE,KAAM,CAAAM,cAAc,CAAGf,UAAU,CAACS,KAAK,CAAGR,QAAQ,CAACQ,KAAK,CACxD,GAAI,CAAAO,MAAM,CAAG,CAAC,CAAC,CAEf,GAAIJ,aAAa,CAAE,CACjB,GAAIC,mBAAmB,EAAIb,UAAU,CAACS,KAAK,EAAII,mBAAmB,CAAGC,kBAAkB,CAAE,CAEvFE,MAAM,CAAGvB,SAAS,CAAG,CAAC,CACxB,CAAC,IAAM,IAAIoB,mBAAmB,EAAIC,kBAAkB,EAAID,mBAAmB,CAAGE,cAAc,CAAE,CAE5FC,MAAM,CAAGvB,SAAS,CACpB,CACF,CAAC,IAAM,IAAIkB,cAAc,CAAE,CACzB,GAAIb,WAAW,CAACW,KAAK,CAAGM,cAAc,EAAIjB,WAAW,CAACW,KAAK,EAAIK,kBAAkB,CAAE,CAEjFE,MAAM,CAAGvB,SAAS,CAAG,CAAC,CACxB,CAAC,IAAM,IAAIK,WAAW,CAACW,KAAK,EAAIT,UAAU,CAACS,KAAK,EAAIX,WAAW,CAACW,KAAK,CAAGK,kBAAkB,CAAE,CAE1FE,MAAM,CAAGvB,SAAS,CACpB,CACF,CAEA,GAAIuB,MAAM,GAAK,CAAC,CAAC,EAAIA,MAAM,GAAKd,eAAe,CAACO,KAAK,CAAE,CACrDP,eAAe,CAACO,KAAK,CAAGO,MAAM,CAChC,CAEA,GAAId,eAAe,CAACO,KAAK,GAAKhB,SAAS,CAAE,CACvC,KAAM,CAAAwB,oBAAoB,CAAGL,aAAa,CAAGX,QAAQ,CAACQ,KAAK,EAAIT,UAAU,CAACS,KAAK,CAAGV,cAAc,CAACU,KAAK,CAAC,CAAGT,UAAU,CAACS,KAAK,CAC1HN,iBAAiB,CAACM,KAAK,CAAGQ,oBAAoB,CAChD,CAGA,GAAIT,YAAY,CAAE,CAChB,MAAO,CAAAJ,SAAS,CAACK,KAAK,CACxB,CAIA,KAAM,CAAAS,eAAe,CAAGN,aAAa,CAAGnB,SAAS,EAAIS,eAAe,CAACO,KAAK,CAAGhB,SAAS,EAAIS,eAAe,CAACO,KAAK,CAC/G,KAAM,CAAAU,cAAc,CAAGD,eAAe,CAAGnB,cAAc,CAACU,KAAK,EAAIG,aAAa,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAC5F,MAAO,CAAAP,UAAU,CAACc,cAAc,CAAEb,kBAAkB,CAACG,KAAK,CAAC,CAC7D\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function useCellTranslate(_ref) {\n    let {\n      cellIndex,\n      cellSize,\n      cellOffset\n    } = _ref;\n    const {\n      activeIndexAnim,\n      activeCellSize,\n      hoverOffset,\n      spacerIndexAnim,\n      placeholderOffset,\n      hoverAnim,\n      viewableIndexMin,\n      viewableIndexMax\n    } = (0, _contextAnimatedValueContext.useAnimatedValues)();\n    const {\n      activeKey\n    } = (0, _contextDraggableFlatListContext.useDraggableFlatListContext)();\n    const {\n      animationConfigRef\n    } = (0, _contextRefContext.useRefs)();\n    const translate = (0, _reactNativeReanimated.useDerivedValue)(function reactNativeDraggableFlatlist_useCellTranslateJs1Factory({\n      _worklet_14653729795643_init_data,\n      cellIndex,\n      activeIndexAnim,\n      viewableIndexMin,\n      viewableIndexMax,\n      activeKey,\n      hoverOffset,\n      activeCellSize,\n      cellOffset,\n      cellSize,\n      spacerIndexAnim,\n      placeholderOffset,\n      hoverAnim,\n      withSpring,\n      animationConfigRef\n    }) {\n      const _e = [new global.Error(), -15, -27];\n      const reactNativeDraggableFlatlist_useCellTranslateJs1 = function () {\n        const isActiveCell = cellIndex === activeIndexAnim.value;\n        const isOutsideViewableRange = !isActiveCell && (cellIndex < viewableIndexMin.value || cellIndex > viewableIndexMax.value);\n        if (!activeKey || activeIndexAnim.value < 0 || isOutsideViewableRange) {\n          return 0;\n        } // Determining spacer index is hard to visualize. See diagram: https://i.imgur.com/jRPf5t3.jpg\n\n        const isBeforeActive = cellIndex < activeIndexAnim.value;\n        const isAfterActive = cellIndex > activeIndexAnim.value;\n        const hoverPlusActiveSize = hoverOffset.value + activeCellSize.value;\n        const offsetPlusHalfSize = cellOffset.value + cellSize.value / 2;\n        const offsetPlusSize = cellOffset.value + cellSize.value;\n        let result = -1;\n        if (isAfterActive) {\n          if (hoverPlusActiveSize >= cellOffset.value && hoverPlusActiveSize < offsetPlusHalfSize) {\n            // bottom edge of active cell overlaps top half of current cell\n            result = cellIndex - 1;\n          } else if (hoverPlusActiveSize >= offsetPlusHalfSize && hoverPlusActiveSize < offsetPlusSize) {\n            // bottom edge of active cell overlaps bottom half of current cell\n            result = cellIndex;\n          }\n        } else if (isBeforeActive) {\n          if (hoverOffset.value < offsetPlusSize && hoverOffset.value >= offsetPlusHalfSize) {\n            // top edge of active cell overlaps bottom half of current cell\n            result = cellIndex + 1;\n          } else if (hoverOffset.value >= cellOffset.value && hoverOffset.value < offsetPlusHalfSize) {\n            // top edge of active cell overlaps top half of current cell\n            result = cellIndex;\n          }\n        }\n        if (result !== -1 && result !== spacerIndexAnim.value) {\n          spacerIndexAnim.value = result;\n        }\n        if (spacerIndexAnim.value === cellIndex) {\n          const newPlaceholderOffset = isAfterActive ? cellSize.value + (cellOffset.value - activeCellSize.value) : cellOffset.value;\n          placeholderOffset.value = newPlaceholderOffset;\n        } // Active cell follows touch\n\n        if (isActiveCell) {\n          return hoverAnim.value;\n        } // Translate cell down if it is before active index and active cell has passed it.\n        // Translate cell up if it is after the active index and active cell has passed it.\n\n        const shouldTranslate = isAfterActive ? cellIndex <= spacerIndexAnim.value : cellIndex >= spacerIndexAnim.value;\n        const translationAmt = shouldTranslate ? activeCellSize.value * (isAfterActive ? -1 : 1) : 0;\n        return withSpring(translationAmt, animationConfigRef.value);\n      };\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__closure = {\n        cellIndex,\n        activeIndexAnim,\n        viewableIndexMin,\n        viewableIndexMax,\n        activeKey,\n        hoverOffset,\n        activeCellSize,\n        cellOffset,\n        cellSize,\n        spacerIndexAnim,\n        placeholderOffset,\n        hoverAnim,\n        withSpring,\n        animationConfigRef\n      };\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__workletHash = 14653729795643;\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__pluginVersion = \"0.6.0\";\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__initData = _worklet_14653729795643_init_data;\n      reactNativeDraggableFlatlist_useCellTranslateJs1.__stackDetails = _e;\n      return reactNativeDraggableFlatlist_useCellTranslateJs1;\n    }({\n      _worklet_14653729795643_init_data,\n      cellIndex,\n      activeIndexAnim,\n      viewableIndexMin,\n      viewableIndexMax,\n      activeKey,\n      hoverOffset,\n      activeCellSize,\n      cellOffset,\n      cellSize,\n      spacerIndexAnim,\n      placeholderOffset,\n      hoverAnim,\n      withSpring: _reactNativeReanimated.withSpring,\n      animationConfigRef\n    }), [activeKey, cellIndex]);\n    return translate;\n  }\n});","lineCount":144,"map":[[7,2,5,0,"exports"],[7,9,5,0],[7,10,5,0,"useCellTranslate"],[7,26,5,0],[7,29,5,0,"useCellTranslate"],[7,45,5,0],[8,2,1,0],[8,6,1,0,"_reactNativeReanimated"],[8,28,1,0],[8,31,1,0,"require"],[8,38,1,0],[8,39,1,0,"_dependencyMap"],[8,53,1,0],[9,2,2,0],[9,6,2,0,"_contextAnimatedValueContext"],[9,34,2,0],[9,37,2,0,"require"],[9,44,2,0],[9,45,2,0,"_dependencyMap"],[9,59,2,0],[10,2,3,0],[10,6,3,0,"_contextDraggableFlatListContext"],[10,38,3,0],[10,41,3,0,"require"],[10,48,3,0],[10,49,3,0,"_dependencyMap"],[10,63,3,0],[11,2,4,0],[11,6,4,0,"_contextRefContext"],[11,24,4,0],[11,27,4,0,"require"],[11,34,4,0],[11,35,4,0,"_dependencyMap"],[11,49,4,0],[12,2,4,48],[12,8,4,48,"_worklet_14653729795643_init_data"],[12,41,4,48],[13,4,4,48,"code"],[13,8,4,48],[14,4,4,48,"location"],[14,12,4,48],[15,4,4,48,"sourceMap"],[15,13,4,48],[16,2,4,48],[17,2,5,7],[17,11,5,16,"useCellTranslate"],[17,27,5,32,"useCellTranslate"],[17,28,5,33,"_ref"],[17,32,5,37],[17,34,5,39],[18,4,6,2],[18,8,6,6],[19,6,7,4,"cellIndex"],[19,15,7,13],[20,6,8,4,"cellSize"],[20,14,8,12],[21,6,9,4,"cellOffset"],[22,4,10,2],[22,5,10,3],[22,8,10,6,"_ref"],[22,12,10,10],[23,4,11,2],[23,10,11,8],[24,6,12,4,"activeIndexAnim"],[24,21,12,19],[25,6,13,4,"activeCellSize"],[25,20,13,18],[26,6,14,4,"hoverOffset"],[26,17,14,15],[27,6,15,4,"spacerIndexAnim"],[27,21,15,19],[28,6,16,4,"placeholderOffset"],[28,23,16,21],[29,6,17,4,"hoverAnim"],[29,15,17,13],[30,6,18,4,"viewableIndexMin"],[30,22,18,20],[31,6,19,4,"viewableIndexMax"],[32,4,20,2],[32,5,20,3],[32,8,20,6],[32,12,20,6,"useAnimatedValues"],[32,40,20,23],[32,41,20,23,"useAnimatedValues"],[32,58,20,23],[32,60,20,24],[32,61,20,25],[33,4,21,2],[33,10,21,8],[34,6,22,4,"activeKey"],[35,4,23,2],[35,5,23,3],[35,8,23,6],[35,12,23,6,"useDraggableFlatListContext"],[35,44,23,33],[35,45,23,33,"useDraggableFlatListContext"],[35,72,23,33],[35,74,23,34],[35,75,23,35],[36,4,24,2],[36,10,24,8],[37,6,25,4,"animationConfigRef"],[38,4,26,2],[38,5,26,3],[38,8,26,6],[38,12,26,6,"useRefs"],[38,30,26,13],[38,31,26,13,"useRefs"],[38,38,26,13],[38,40,26,14],[38,41,26,15],[39,4,27,2],[39,10,27,8,"translate"],[39,19,27,17],[39,22,27,20],[39,26,27,20,"useDerivedValue"],[39,48,27,35],[39,49,27,35,"useDerivedValue"],[39,64,27,35],[39,66,27,36],[39,75,27,36,"reactNativeDraggableFlatlist_useCellTranslateJs1Factory"],[39,131,27,36],[40,6,27,36,"_worklet_14653729795643_init_data"],[40,39,27,36],[41,6,28,25,"cellIndex"],[41,15,28,34],[42,6,28,39,"activeIndexAnim"],[42,21,28,54],[43,6,29,65,"viewableIndexMin"],[43,22,29,81],[44,6,29,103,"viewableIndexMax"],[44,22,29,119],[45,6,31,9,"activeKey"],[45,15,31,18],[46,6,38,32,"hoverOffset"],[46,17,38,43],[47,6,38,52,"activeCellSize"],[47,20,38,66],[48,6,39,31,"cellOffset"],[48,16,39,41],[49,6,39,50,"cellSize"],[49,14,39,58],[50,6,61,36,"spacerIndexAnim"],[50,21,61,51],[51,6,67,6,"placeholderOffset"],[51,23,67,23],[52,6,72,13,"hoverAnim"],[52,15,72,22],[53,6,79,11,"withSpring"],[53,16,79,21],[54,6,79,38,"animationConfigRef"],[55,4,79,56],[56,6,79,56],[56,12,79,56,"_e"],[56,14,79,56],[56,22,79,56,"global"],[56,28,79,56],[56,29,79,56,"Error"],[56,34,79,56],[57,6,79,56],[57,12,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[57,60,79,56],[57,72,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[57,73,79,56],[57,75,27,42],[58,8,28,4],[58,14,28,10,"isActiveCell"],[58,26,28,22],[58,29,28,25,"cellIndex"],[58,38,28,34],[58,43,28,39,"activeIndexAnim"],[58,58,28,54],[58,59,28,55,"value"],[58,64,28,60],[59,8,29,4],[59,14,29,10,"isOutsideViewableRange"],[59,36,29,32],[59,39,29,35],[59,40,29,36,"isActiveCell"],[59,52,29,48],[59,57,29,53,"cellIndex"],[59,66,29,62],[59,69,29,65,"viewableIndexMin"],[59,85,29,81],[59,86,29,82,"value"],[59,91,29,87],[59,95,29,91,"cellIndex"],[59,104,29,100],[59,107,29,103,"viewableIndexMax"],[59,123,29,119],[59,124,29,120,"value"],[59,129,29,125],[59,130,29,126],[60,8,31,4],[60,12,31,8],[60,13,31,9,"activeKey"],[60,22,31,18],[60,26,31,22,"activeIndexAnim"],[60,41,31,37],[60,42,31,38,"value"],[60,47,31,43],[60,50,31,46],[60,51,31,47],[60,55,31,51,"isOutsideViewableRange"],[60,77,31,73],[60,79,31,75],[61,10,32,6],[61,17,32,13],[61,18,32,14],[62,8,33,4],[62,9,33,5],[62,10,33,6],[64,8,36,4],[64,14,36,10,"isBeforeActive"],[64,28,36,24],[64,31,36,27,"cellIndex"],[64,40,36,36],[64,43,36,39,"activeIndexAnim"],[64,58,36,54],[64,59,36,55,"value"],[64,64,36,60],[65,8,37,4],[65,14,37,10,"isAfterActive"],[65,27,37,23],[65,30,37,26,"cellIndex"],[65,39,37,35],[65,42,37,38,"activeIndexAnim"],[65,57,37,53],[65,58,37,54,"value"],[65,63,37,59],[66,8,38,4],[66,14,38,10,"hoverPlusActiveSize"],[66,33,38,29],[66,36,38,32,"hoverOffset"],[66,47,38,43],[66,48,38,44,"value"],[66,53,38,49],[66,56,38,52,"activeCellSize"],[66,70,38,66],[66,71,38,67,"value"],[66,76,38,72],[67,8,39,4],[67,14,39,10,"offsetPlusHalfSize"],[67,32,39,28],[67,35,39,31,"cellOffset"],[67,45,39,41],[67,46,39,42,"value"],[67,51,39,47],[67,54,39,50,"cellSize"],[67,62,39,58],[67,63,39,59,"value"],[67,68,39,64],[67,71,39,67],[67,72,39,68],[68,8,40,4],[68,14,40,10,"offsetPlusSize"],[68,28,40,24],[68,31,40,27,"cellOffset"],[68,41,40,37],[68,42,40,38,"value"],[68,47,40,43],[68,50,40,46,"cellSize"],[68,58,40,54],[68,59,40,55,"value"],[68,64,40,60],[69,8,41,4],[69,12,41,8,"result"],[69,18,41,14],[69,21,41,17],[69,22,41,18],[69,23,41,19],[70,8,43,4],[70,12,43,8,"isAfterActive"],[70,25,43,21],[70,27,43,23],[71,10,44,6],[71,14,44,10,"hoverPlusActiveSize"],[71,33,44,29],[71,37,44,33,"cellOffset"],[71,47,44,43],[71,48,44,44,"value"],[71,53,44,49],[71,57,44,53,"hoverPlusActiveSize"],[71,76,44,72],[71,79,44,75,"offsetPlusHalfSize"],[71,97,44,93],[71,99,44,95],[72,12,45,8],[73,12,46,8,"result"],[73,18,46,14],[73,21,46,17,"cellIndex"],[73,30,46,26],[73,33,46,29],[73,34,46,30],[74,10,47,6],[74,11,47,7],[74,17,47,13],[74,21,47,17,"hoverPlusActiveSize"],[74,40,47,36],[74,44,47,40,"offsetPlusHalfSize"],[74,62,47,58],[74,66,47,62,"hoverPlusActiveSize"],[74,85,47,81],[74,88,47,84,"offsetPlusSize"],[74,102,47,98],[74,104,47,100],[75,12,48,8],[76,12,49,8,"result"],[76,18,49,14],[76,21,49,17,"cellIndex"],[76,30,49,26],[77,10,50,6],[78,8,51,4],[78,9,51,5],[78,15,51,11],[78,19,51,15,"isBeforeActive"],[78,33,51,29],[78,35,51,31],[79,10,52,6],[79,14,52,10,"hoverOffset"],[79,25,52,21],[79,26,52,22,"value"],[79,31,52,27],[79,34,52,30,"offsetPlusSize"],[79,48,52,44],[79,52,52,48,"hoverOffset"],[79,63,52,59],[79,64,52,60,"value"],[79,69,52,65],[79,73,52,69,"offsetPlusHalfSize"],[79,91,52,87],[79,93,52,89],[80,12,53,8],[81,12,54,8,"result"],[81,18,54,14],[81,21,54,17,"cellIndex"],[81,30,54,26],[81,33,54,29],[81,34,54,30],[82,10,55,6],[82,11,55,7],[82,17,55,13],[82,21,55,17,"hoverOffset"],[82,32,55,28],[82,33,55,29,"value"],[82,38,55,34],[82,42,55,38,"cellOffset"],[82,52,55,48],[82,53,55,49,"value"],[82,58,55,54],[82,62,55,58,"hoverOffset"],[82,73,55,69],[82,74,55,70,"value"],[82,79,55,75],[82,82,55,78,"offsetPlusHalfSize"],[82,100,55,96],[82,102,55,98],[83,12,56,8],[84,12,57,8,"result"],[84,18,57,14],[84,21,57,17,"cellIndex"],[84,30,57,26],[85,10,58,6],[86,8,59,4],[87,8,61,4],[87,12,61,8,"result"],[87,18,61,14],[87,23,61,19],[87,24,61,20],[87,25,61,21],[87,29,61,25,"result"],[87,35,61,31],[87,40,61,36,"spacerIndexAnim"],[87,55,61,51],[87,56,61,52,"value"],[87,61,61,57],[87,63,61,59],[88,10,62,6,"spacerIndexAnim"],[88,25,62,21],[88,26,62,22,"value"],[88,31,62,27],[88,34,62,30,"result"],[88,40,62,36],[89,8,63,4],[90,8,65,4],[90,12,65,8,"spacerIndexAnim"],[90,27,65,23],[90,28,65,24,"value"],[90,33,65,29],[90,38,65,34,"cellIndex"],[90,47,65,43],[90,49,65,45],[91,10,66,6],[91,16,66,12,"newPlaceholderOffset"],[91,36,66,32],[91,39,66,35,"isAfterActive"],[91,52,66,48],[91,55,66,51,"cellSize"],[91,63,66,59],[91,64,66,60,"value"],[91,69,66,65],[91,73,66,69,"cellOffset"],[91,83,66,79],[91,84,66,80,"value"],[91,89,66,85],[91,92,66,88,"activeCellSize"],[91,106,66,102],[91,107,66,103,"value"],[91,112,66,108],[91,113,66,109],[91,116,66,112,"cellOffset"],[91,126,66,122],[91,127,66,123,"value"],[91,132,66,128],[92,10,67,6,"placeholderOffset"],[92,27,67,23],[92,28,67,24,"value"],[92,33,67,29],[92,36,67,32,"newPlaceholderOffset"],[92,56,67,52],[93,8,68,4],[93,9,68,5],[93,10,68,6],[95,8,71,4],[95,12,71,8,"isActiveCell"],[95,24,71,20],[95,26,71,22],[96,10,72,6],[96,17,72,13,"hoverAnim"],[96,26,72,22],[96,27,72,23,"value"],[96,32,72,28],[97,8,73,4],[97,9,73,5],[97,10,73,6],[98,8,74,4],[100,8,77,4],[100,14,77,10,"shouldTranslate"],[100,29,77,25],[100,32,77,28,"isAfterActive"],[100,45,77,41],[100,48,77,44,"cellIndex"],[100,57,77,53],[100,61,77,57,"spacerIndexAnim"],[100,76,77,72],[100,77,77,73,"value"],[100,82,77,78],[100,85,77,81,"cellIndex"],[100,94,77,90],[100,98,77,94,"spacerIndexAnim"],[100,113,77,109],[100,114,77,110,"value"],[100,119,77,115],[101,8,78,4],[101,14,78,10,"translationAmt"],[101,28,78,24],[101,31,78,27,"shouldTranslate"],[101,46,78,42],[101,49,78,45,"activeCellSize"],[101,63,78,59],[101,64,78,60,"value"],[101,69,78,65],[101,73,78,69,"isAfterActive"],[101,86,78,82],[101,89,78,85],[101,90,78,86],[101,91,78,87],[101,94,78,90],[101,95,78,91],[101,96,78,92],[101,99,78,95],[101,100,78,96],[102,8,79,4],[102,15,79,11,"withSpring"],[102,25,79,21],[102,26,79,22,"translationAmt"],[102,40,79,36],[102,42,79,38,"animationConfigRef"],[102,60,79,56],[102,61,79,57,"value"],[102,66,79,62],[102,67,79,63],[103,6,80,2],[103,7,80,3],[104,6,80,3,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[104,54,80,3],[104,55,80,3,"__closure"],[104,64,80,3],[105,8,28,25,"cellIndex"],[105,17,28,34],[106,8,28,39,"activeIndexAnim"],[106,23,28,54],[107,8,29,65,"viewableIndexMin"],[107,24,29,81],[108,8,29,103,"viewableIndexMax"],[108,24,29,119],[109,8,31,9,"activeKey"],[109,17,31,18],[110,8,38,32,"hoverOffset"],[110,19,38,43],[111,8,38,52,"activeCellSize"],[111,22,38,66],[112,8,39,31,"cellOffset"],[112,18,39,41],[113,8,39,50,"cellSize"],[113,16,39,58],[114,8,61,36,"spacerIndexAnim"],[114,23,61,51],[115,8,67,6,"placeholderOffset"],[115,25,67,23],[116,8,72,13,"hoverAnim"],[116,17,72,22],[117,8,79,11,"withSpring"],[117,18,79,21],[118,8,79,38,"animationConfigRef"],[119,6,79,56],[120,6,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[120,54,79,56],[120,55,79,56,"__workletHash"],[120,68,79,56],[121,6,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[121,54,79,56],[121,55,79,56,"__pluginVersion"],[121,70,79,56],[122,6,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[122,54,79,56],[122,55,79,56,"__initData"],[122,65,79,56],[122,68,79,56,"_worklet_14653729795643_init_data"],[122,101,79,56],[123,6,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[123,54,79,56],[123,55,79,56,"__stackDetails"],[123,69,79,56],[123,72,79,56,"_e"],[123,74,79,56],[124,6,79,56],[124,13,79,56,"reactNativeDraggableFlatlist_useCellTranslateJs1"],[124,61,79,56],[125,4,79,56],[125,5,27,36],[126,6,27,36,"_worklet_14653729795643_init_data"],[126,39,27,36],[127,6,28,25,"cellIndex"],[127,15,28,34],[128,6,28,39,"activeIndexAnim"],[128,21,28,54],[129,6,29,65,"viewableIndexMin"],[129,22,29,81],[130,6,29,103,"viewableIndexMax"],[130,22,29,119],[131,6,31,9,"activeKey"],[131,15,31,18],[132,6,38,32,"hoverOffset"],[132,17,38,43],[133,6,38,52,"activeCellSize"],[133,20,38,66],[134,6,39,31,"cellOffset"],[134,16,39,41],[135,6,39,50,"cellSize"],[135,14,39,58],[136,6,61,36,"spacerIndexAnim"],[136,21,61,51],[137,6,67,6,"placeholderOffset"],[137,23,67,23],[138,6,72,13,"hoverAnim"],[138,15,72,22],[139,6,79,11,"withSpring"],[139,16,79,21],[139,18,79,11,"withSpring"],[139,40,79,21],[139,41,79,21,"withSpring"],[139,51,79,21],[140,6,79,38,"animationConfigRef"],[141,4,79,56],[141,8,80,5],[141,9,80,6,"activeKey"],[141,18,80,15],[141,20,80,17,"cellIndex"],[141,29,80,26],[141,30,80,27],[141,31,80,28],[142,4,81,2],[142,11,81,9,"translate"],[142,20,81,18],[143,2,82,0],[144,0,82,1],[144,3]],"functionMap":{"names":["<global>","useCellTranslate","useDerivedValue$argument_0"],"mappings":"AAA;OCI;oCCsB;GDqD;CDE"},"hasCjsExports":false},"type":"js/module"}]}